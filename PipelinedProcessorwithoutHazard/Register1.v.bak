module Register1(clk, write_enable,read_addr1, read_addr2, write_addr, read_data1, read_data2);
    input wire clk;
    input wire write_enable;
    input wire [4:0] read_addr1;
    input wire [4:0] read_addr2;
    input wire [4:0] write_addr;
    input wire [31:0] write_data;
    output reg [31:0] read_data1;
    output reg [31:0] read_data2;

    reg [31:0] register[0:31];
    
	 always@ (negedge clk)
	 begin
        read_data1 <= (read_addr1 === 5'b00000) ? 32'b0 : register[read_addr1];
        read_data2 <= (read_addr2 === 5'b00000) ? 32'b0 : register[read_addr2];
    end
		  
    always @(posedge clk) 
	 begin
		  if(write_enable & (write_addr != 5'b00000)) 
            register[write_addr] <= write_data;
    end

endmodule